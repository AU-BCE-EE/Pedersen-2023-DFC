p.con <- 1 # atm
R.con <- 0.082057338 # [L * atm * K^-1 * mol^-1]
M.N <- 14.0067 # g * mol^-1
dat$air.flow <- 1
dat[dat$treat == 'WT', ]$air.flow <- 20.2 * 60 # L min^-1
dat[dat$treat == 'DC', ]$air.flow <- 53 * 60 # L min^-1
dat$A.frame <- 1
dat[dat$treat == 'WT', ]$A.frame <- 0.293 * 0.674 #m^2
dat[dat$treat == 'DC', ]$A.frame <- (0.7/2)^2 *3.14 #m^2
dat$temp <- as.numeric(dat$temp)
dat$air.temp.K <- dat$temp + 273.15
mean(dat$temp[1:3])
mean(dat$temp)
min(dat$temp)
max(dat$temp)
weather.exp1 <- dat[, c(1, 36)]
weather.exp1$experiment <- 'Experiment 1'
# calculation of a concentration from ppb to mol * L^-1
dat$n <- p.con / (R.con * dat$air.temp.K) * dat$NH3.corr * 10^-9  # mol * L^-1
# calculation of flux, from mol * L^-1 to g.NH3 * min^-1 * m^-2
dat$flux <- (dat$n * M.N * dat$air.flow) / dat$A.frame
# From g.NH3 * min^-1 * m^-2 to myg.NH3 * s^-1 * m^-2
dat$flux <- dat$flux * 10^6 * 60^-1
# rearanging data by tunnel
dat <- arrange(dat, by = id)
# calculation of total flux over time
# Average ammonia flux in measurement interval
dat$flux.tr <- rollapplyr(dat$flux, 2, mean, fill = NA)
dat$flux.tr[dat$elapsed.time == 0] <- 0
dat$flux.tr[dat$flux.tr < 0 ] <- 0
# calculation of total flux over time, last point * 144 min * 60 sec (time from start to start 8 x 18 min)
dat$flux.time <- dat$flux.tr * 144 * 60
# cumulative emis
dat <- mutate(group_by(dat, id, treat), cum.emis = cumsum(flux.time))
# Table for plotting flux
dat.summ <- summarise(group_by(dat, treat, elapsed.time), flux.mn = mean(flux), flux.sd = sd(flux),
cum.emis.mn = mean(cum.emis), cum.emis.sd = sd(cum.emis))
View(dat.summ)
dat.end <- dat.summ[dat.summ$elapsed.time == 64.8, ]
dat.end$cum.emi.mnA <- dat.end$cum.emis.mn / 10*6
dat.end$cum.emi.sdA <- dat.end$cum.emis.sd / 10*6
ggplot(dat.end, aes(treat, cum.emis.mnA, fill = treat)) +
geom_bar(stat = 'identity', width = 0.5) +
geom_errorbar(aes(ymin = cum.emis.mnA - cum.emis.sdA, ymax = cum.smis.mnA + cum.emis.sdA), width = 0.3, size = 0.5) +
ylab(expression(paste('Cumulative  ', NH[3], ' [g', ' ', m^-2, ']')))
# Experiment A
# The dataframe in 'data' added here has undergone filtering and addition of chamber ID/treatment
dat <- read.csv('../data/exp1.csv', header = TRUE, sep = ';')
dat$id <- as.character(dat$id)
# first look
ggplot(dat, aes(elapsed.time, NH3_30s, colour = treat)) + geom_point()
# fixing a time bug
dat$elapsed.time[dat$elapsed.time == 9.60] <- 9.59
# background data:
WT.bg <- dat[dat$treat == 'WT bg', ]
DC.bg <- dat[dat$treat == 'DC bg', ]
# outlet data:
WT <- dat[dat$treat == 'WT', ]
DC <- dat[dat$treat == 'DC', ]
# average background values
WT.bg.summ <- aggregate2(WT.bg, x = c('NH3_30s'), by = c('elapsed.time'),
FUN = list(bg = mean))
DC.bg.summ <- aggregate2(DC.bg, x = c('NH3_30s'), by = c('elapsed.time'),
FUN = list(bg = mean))
# joining average background and outlet data
WT <- full_join(WT.bg.summ, WT, by = 'elapsed.time')
DC <- full_join(DC.bg.summ, DC, by = 'elapsed.time')
# subtracting background from outlet data
WT$NH3.corr <- WT$NH3_30s - WT$NH3_30s.bg
DC$NH3.corr <- DC$NH3_30s - DC$NH3_30s.bg
# check
WT[! complete.cases(WT), ]
DC[! complete.cases(DC), ]
# combining
dat <- rbind(WT, DC)
# ambient temperature data
header <- c('date', 'time', 'temp')
weather <- read.table('../data/temp.txt', fill = TRUE, col.names = header)
weather <- weather[-1, ]
weather$date.time.weather <- paste(weather$date, weather$time)
dat$date.time.weather <- strptime(dat$date.time, format = '%d-%m-%Y %H:%M')
dat$date.time.weather <- as.character(round_date(dat$date.time.weather, '1 hour'))
dat.test <- left_join(dat, weather, by = 'date.time.weather')
dat$date.time.weather <- strptime(dat$date.time, format = '%d-%m-%Y %H:%M')
dat$date.time.weather <- as.character(round_date(dat$date.time.weather, '1 hour'))
dat <- left_join(dat, weather, by = 'date.time.weather')
# constants:
p.con <- 1 # atm
R.con <- 0.082057338 # [L * atm * K^-1 * mol^-1]
M.N <- 14.0067 # g * mol^-1
dat$air.flow <- 1
dat[dat$treat == 'WT', ]$air.flow <- 20.2 * 60 # L min^-1
dat[dat$treat == 'DC', ]$air.flow <- 53 * 60 # L min^-1
dat$A.frame <- 1
dat[dat$treat == 'WT', ]$A.frame <- 0.293 * 0.674 #m^2
dat[dat$treat == 'DC', ]$A.frame <- (0.7/2)^2 *3.14 #m^2
dat$temp <- as.numeric(dat$temp)
dat$air.temp.K <- dat$temp + 273.15
mean(dat$temp[1:3])
mean(dat$temp)
min(dat$temp)
max(dat$temp)
weather.exp1 <- dat[, c(1, 36)]
weather.exp1$experiment <- 'Experiment 1'
# calculation of a concentration from ppb to mol * L^-1
dat$n <- p.con / (R.con * dat$air.temp.K) * dat$NH3.corr * 10^-9  # mol * L^-1
# calculation of flux, from mol * L^-1 to g.NH3 * min^-1 * m^-2
dat$flux <- (dat$n * M.N * dat$air.flow) / dat$A.frame
# From g.NH3 * min^-1 * m^-2 to myg.NH3 * s^-1 * m^-2
dat$flux <- dat$flux * 10^6 * 60^-1
# rearanging data by tunnel
dat <- arrange(dat, by = id)
# calculation of total flux over time
# Average ammonia flux in measurement interval
dat$flux.tr <- rollapplyr(dat$flux, 2, mean, fill = NA)
dat$flux.tr[dat$elapsed.time == 0] <- 0
dat$flux.tr[dat$flux.tr < 0 ] <- 0
# calculation of total flux over time, last point * 144 min * 60 sec (time from start to start 8 x 18 min)
dat$flux.time <- dat$flux.tr * 144 * 60
# cumulative emis
dat <- mutate(group_by(dat, id, treat), cum.emis = cumsum(flux.time))
# Table for plotting flux
dat.summ <- summarise(group_by(dat, treat, elapsed.time), flux.mn = mean(flux), flux.sd = sd(flux),
cum.emis.mn = mean(cum.emis), cum.emis.sd = sd(cum.emis))
dat.end <- dat.summ[dat.summ$elapsed.time == 64.8, ]
dat.end$cum.emi.mnA <- dat.end$cum.emis.mn / 10*6
dat.end$cum.emi.sdA <- dat.end$cum.emis.sd / 10*6
ggplot(dat.end, aes(treat, cum.emis.mnA, fill = treat)) +
geom_bar(stat = 'identity', width = 0.5) +
geom_errorbar(aes(ymin = cum.emis.mnA - cum.emis.sdA, ymax = cum.smis.mnA + cum.emis.sdA), width = 0.3, size = 0.5) +
ylab(expression(paste('Cumulative  ', NH[3], ' [g', ' ', m^-2, ']')))
# Experiment A
# The dataframe in 'data' added here has undergone filtering and addition of chamber ID/treatment
dat <- read.csv('../data/exp1.csv', header = TRUE, sep = ';')
dat$id <- as.character(dat$id)
# first look
ggplot(dat, aes(elapsed.time, NH3_30s, colour = treat)) + geom_point()
# fixing a time bug
dat$elapsed.time[dat$elapsed.time == 9.60] <- 9.59
# background data:
WT.bg <- dat[dat$treat == 'WT bg', ]
DC.bg <- dat[dat$treat == 'DC bg', ]
# outlet data:
WT <- dat[dat$treat == 'WT', ]
DC <- dat[dat$treat == 'DC', ]
# average background values
WT.bg.summ <- aggregate2(WT.bg, x = c('NH3_30s'), by = c('elapsed.time'),
FUN = list(bg = mean))
DC.bg.summ <- aggregate2(DC.bg, x = c('NH3_30s'), by = c('elapsed.time'),
FUN = list(bg = mean))
# joining average background and outlet data
WT <- full_join(WT.bg.summ, WT, by = 'elapsed.time')
DC <- full_join(DC.bg.summ, DC, by = 'elapsed.time')
# subtracting background from outlet data
WT$NH3.corr <- WT$NH3_30s - WT$NH3_30s.bg
DC$NH3.corr <- DC$NH3_30s - DC$NH3_30s.bg
# check
WT[! complete.cases(WT), ]
DC[! complete.cases(DC), ]
# combining
dat <- rbind(WT, DC)
# ambient temperature data
header <- c('date', 'time', 'temp')
weather <- read.table('../data/temp.txt', fill = TRUE, col.names = header)
weather <- weather[-1, ]
weather$date.time.weather <- paste(weather$date, weather$time)
dat$date.time.weather <- strptime(dat$date.time, format = '%d-%m-%Y %H:%M')
dat$date.time.weather <- as.character(round_date(dat$date.time.weather, '1 hour'))
dat.test <- left_join(dat, weather, by = 'date.time.weather')
dat$date.time.weather <- strptime(dat$date.time, format = '%d-%m-%Y %H:%M')
dat$date.time.weather <- as.character(round_date(dat$date.time.weather, '1 hour'))
dat <- left_join(dat, weather, by = 'date.time.weather')
# constants:
p.con <- 1 # atm
R.con <- 0.082057338 # [L * atm * K^-1 * mol^-1]
M.N <- 14.0067 # g * mol^-1
dat$air.flow <- 1
dat[dat$treat == 'WT', ]$air.flow <- 20.2 * 60 # L min^-1
dat[dat$treat == 'DC', ]$air.flow <- 53 * 60 # L min^-1
dat$A.frame <- 1
dat[dat$treat == 'WT', ]$A.frame <- 0.293 * 0.674 #m^2
dat[dat$treat == 'DC', ]$A.frame <- (0.7/2)^2 *3.14 #m^2
dat$temp <- as.numeric(dat$temp)
dat$air.temp.K <- dat$temp + 273.15
mean(dat$temp[1:3])
mean(dat$temp)
min(dat$temp)
max(dat$temp)
weather.exp1 <- dat[, c(1, 36)]
weather.exp1$experiment <- 'Experiment 1'
# calculation of a concentration from ppb to mol * L^-1
dat$n <- p.con / (R.con * dat$air.temp.K) * dat$NH3.corr * 10^-9  # mol * L^-1
# calculation of flux, from mol * L^-1 to g.NH3 * min^-1 * m^-2
dat$flux <- (dat$n * M.N * dat$air.flow) / dat$A.frame
# From g.NH3 * min^-1 * m^-2 to myg.NH3 * s^-1 * m^-2
dat$flux <- dat$flux * 10^6 * 60^-1
# rearanging data by tunnel
dat <- arrange(dat, by = id)
# calculation of total flux over time
# Average ammonia flux in measurement interval
dat$flux.tr <- rollapplyr(dat$flux, 2, mean, fill = NA)
dat$flux.tr[dat$elapsed.time == 0] <- 0
dat$flux.tr[dat$flux.tr < 0 ] <- 0
# calculation of total flux over time, last point * 144 min * 60 sec (time from start to start 8 x 18 min)
dat$flux.time <- dat$flux.tr * 144 * 60
# cumulative emis
dat <- mutate(group_by(dat, id, treat), cum.emis = cumsum(flux.time))
# Table for plotting flux
dat.summ <- summarise(group_by(dat, treat, elapsed.time), flux.mn = mean(flux), flux.sd = sd(flux),
cum.emis.mn = mean(cum.emis), cum.emis.sd = sd(cum.emis))
dat.end <- dat.summ[dat.summ$elapsed.time == 64.8, ]
dat.end$cum.emis.mnA <- dat.end$cum.emis.mn / 10*6
dat.end$cum.emis.sdA <- dat.end$cum.emis.sd / 10*6
ggplot(dat.end, aes(treat, cum.emis.mnA, fill = treat)) +
geom_bar(stat = 'identity', width = 0.5) +
geom_errorbar(aes(ymin = cum.emis.mnA - cum.emis.sdA, ymax = cum.smis.mnA + cum.emis.sdA), width = 0.3, size = 0.5) +
ylab(expression(paste('Cumulative  ', NH[3], ' [g', ' ', m^-2, ']')))
# Experiment A
# The dataframe in 'data' added here has undergone filtering and addition of chamber ID/treatment
dat <- read.csv('../data/exp1.csv', header = TRUE, sep = ';')
dat$id <- as.character(dat$id)
# first look
ggplot(dat, aes(elapsed.time, NH3_30s, colour = treat)) + geom_point()
# fixing a time bug
dat$elapsed.time[dat$elapsed.time == 9.60] <- 9.59
# background data:
WT.bg <- dat[dat$treat == 'WT bg', ]
DC.bg <- dat[dat$treat == 'DC bg', ]
# outlet data:
WT <- dat[dat$treat == 'WT', ]
DC <- dat[dat$treat == 'DC', ]
# average background values
WT.bg.summ <- aggregate2(WT.bg, x = c('NH3_30s'), by = c('elapsed.time'),
FUN = list(bg = mean))
DC.bg.summ <- aggregate2(DC.bg, x = c('NH3_30s'), by = c('elapsed.time'),
FUN = list(bg = mean))
# joining average background and outlet data
WT <- full_join(WT.bg.summ, WT, by = 'elapsed.time')
DC <- full_join(DC.bg.summ, DC, by = 'elapsed.time')
# subtracting background from outlet data
WT$NH3.corr <- WT$NH3_30s - WT$NH3_30s.bg
DC$NH3.corr <- DC$NH3_30s - DC$NH3_30s.bg
# check
WT[! complete.cases(WT), ]
DC[! complete.cases(DC), ]
# combining
dat <- rbind(WT, DC)
# ambient temperature data
header <- c('date', 'time', 'temp')
weather <- read.table('../data/temp.txt', fill = TRUE, col.names = header)
weather <- weather[-1, ]
weather$date.time.weather <- paste(weather$date, weather$time)
dat$date.time.weather <- strptime(dat$date.time, format = '%d-%m-%Y %H:%M')
dat$date.time.weather <- as.character(round_date(dat$date.time.weather, '1 hour'))
dat.test <- left_join(dat, weather, by = 'date.time.weather')
dat$date.time.weather <- strptime(dat$date.time, format = '%d-%m-%Y %H:%M')
dat$date.time.weather <- as.character(round_date(dat$date.time.weather, '1 hour'))
dat <- left_join(dat, weather, by = 'date.time.weather')
# constants:
p.con <- 1 # atm
R.con <- 0.082057338 # [L * atm * K^-1 * mol^-1]
M.N <- 14.0067 # g * mol^-1
dat$air.flow <- 1
dat[dat$treat == 'WT', ]$air.flow <- 20.2 * 60 # L min^-1
dat[dat$treat == 'DC', ]$air.flow <- 53 * 60 # L min^-1
dat$A.frame <- 1
dat[dat$treat == 'WT', ]$A.frame <- 0.293 * 0.674 #m^2
dat[dat$treat == 'DC', ]$A.frame <- (0.7/2)^2 *3.14 #m^2
dat$temp <- as.numeric(dat$temp)
dat$air.temp.K <- dat$temp + 273.15
mean(dat$temp[1:3])
mean(dat$temp)
min(dat$temp)
max(dat$temp)
weather.exp1 <- dat[, c(1, 36)]
weather.exp1$experiment <- 'Experiment 1'
# calculation of a concentration from ppb to mol * L^-1
dat$n <- p.con / (R.con * dat$air.temp.K) * dat$NH3.corr * 10^-9  # mol * L^-1
# calculation of flux, from mol * L^-1 to g.NH3 * min^-1 * m^-2
dat$flux <- (dat$n * M.N * dat$air.flow) / dat$A.frame
# From g.NH3 * min^-1 * m^-2 to myg.NH3 * s^-1 * m^-2
dat$flux <- dat$flux * 10^6 * 60^-1
# rearanging data by tunnel
dat <- arrange(dat, by = id)
# calculation of total flux over time
# Average ammonia flux in measurement interval
dat$flux.tr <- rollapplyr(dat$flux, 2, mean, fill = NA)
dat$flux.tr[dat$elapsed.time == 0] <- 0
dat$flux.tr[dat$flux.tr < 0 ] <- 0
# calculation of total flux over time, last point * 144 min * 60 sec (time from start to start 8 x 18 min)
dat$flux.time <- dat$flux.tr * 144 * 60
# cumulative emis
dat <- mutate(group_by(dat, id, treat), cum.emis = cumsum(flux.time))
# Table for plotting flux
dat.summ <- summarise(group_by(dat, treat, elapsed.time), flux.mn = mean(flux), flux.sd = sd(flux),
cum.emis.mn = mean(cum.emis), cum.emis.sd = sd(cum.emis))
dat.end <- dat.summ[dat.summ$elapsed.time == 64.8, ]
dat.end$cum.emis.mnA <- dat.end$cum.emis.mn / 10*6
dat.end$cum.emis.sdA <- dat.end$cum.emis.sd / 10*6
ggplot(dat.end, aes(treat, cum.emis.mnA, fill = treat)) +
geom_bar(stat = 'identity', width = 0.5) +
geom_errorbar(aes(ymin = cum.emis.mnA - cum.emis.sdA, ymax = cum.emis.mnA + cum.emis.sdA), width = 0.3, size = 0.5) +
ylab(expression(paste('Cumulative  ', NH[3], ' [g', ' ', m^-2, ']')))
ggplot(dat.summ, aes(elasped.time, flux.mn, colour = treat, fill = treat)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymax = flux.mn + flux.sd, ymin = flux.mn - flux.sd, group = treat), alpha = 0.3, color = NA) +
ylab(expression(paste(NH[3], ' flux [', mu, 'g  ', s^-1, ' ', m^-2, ']'))) +
xlab('Time after slurry application [hours]')
ggplot(dat.summ, aes(elapsed.time, flux.mn, colour = treat, fill = treat)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymax = flux.mn + flux.sd, ymin = flux.mn - flux.sd, group = treat), alpha = 0.3, color = NA) +
ylab(expression(paste(NH[3], ' flux [', mu, 'g  ', s^-1, ' ', m^-2, ']'))) +
xlab('Time after slurry application [hours]')
ggplot(dat, aes(elapsed.time, flux, color = treat)) +
geom_point()
ggplot(dat.end, aes(treat, cum.emis.mnA, fill = treat)) +
geom_bar(stat = 'identity', width = 0.5) +
geom_errorbar(aes(ymin = cum.emis.mnA - cum.emis.sdA, ymax = cum.emis.mnA + cum.emis.sdA), width = 0.3, size = 0.5) +
theme_bw() +
ylab(expression(paste('Cumulative  ', NH[3], ' [g', ' ', m^-2, ']')))
ggplot(dat.summ, aes(elapsed.time, flux.mn, colour = treat, fill = treat)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymax = flux.mn + flux.sd, ymin = flux.mn - flux.sd, group = treat), alpha = 0.3, color = NA) +
theme_bw() +
ylab(expression(paste(NH[3], ' flux [', mu, 'g  ', s^-1, ' ', m^-2, ']'))) +
xlab('Time after slurry application [hours]')
ggplot(dat, aes(elapsed.time, flux, color = treat)) +
geom_point() +
theme_bw()
ggplot(dat, aes(elapsed.time, flux, color = treat)) +
geom_point() +
theme_bw() +
ylab(expression(paste(NH[3], ' flux [', mu, 'g  ', s^-1, ' ', m^-2, ']'))) +
xlab('Time after slurry application [hours]')
# FLOWMETERS FOR WINDTUNNELS
# Johanna
# 180323
############################################################
### DATA ###################################################
############################################################
# Equation: q = k* DP^(1/2)
# where q is the flow in L/s, k is a constant and Dp is the pressure difference measured in the meter in Pa.
# FMU/FMDRU 160-125: k = 18.0, stable between 30-200 L/s
# FMU/FMDRU 80-63: k = 4.4, stable between 10-80 L/s
############################################################
### CONSTANTS ##############################################
############################################################
k <- 4.4
# volumen of tunnel
#   m3 =     m  *  m   * m
V.tunnel <- 0.25 * 0.80 * 0.40
# cross section of tunnel
#     m2   =  m   *  m
cs.tunnel <- 0.25 * 0.4
############################################################
### KNOWN Dp ###############################################
############################################################
rm(Dp, q.Ls, q.m3min, AER, speed)
Dp <- c(5, 57, 270)   # <-------------------------------------------------------------------- INSERT VALUE HERE
# L/s = L/s
q.Ls <- k * Dp^(1/2)
# m3/min = L/s    * s*min^-1 * m3*L^-1
q.m3min <- k * Dp^(1/2) * 60       * 10^-3
q.m3min * 60
# FLOWMETERS FOR WINDTUNNELS
# Johanna
# 180323
############################################################
### DATA ###################################################
############################################################
# Equation: q = k* DP^(1/2)
# where q is the flow in L/s, k is a constant and Dp is the pressure difference measured in the meter in Pa.
# FMU/FMDRU 160-125: k = 18.0, stable between 30-200 L/s
# FMU/FMDRU 80-63: k = 4.4, stable between 10-80 L/s
############################################################
### CONSTANTS ##############################################
############################################################
k <- 4.4
# volumen of tunnel
#   m3 =     m  *  m   * m
V.tunnel <- 0.25 * 0.80 * 0.40
# cross section of tunnel
#     m2   =  m   *  m
cs.tunnel <- 0.25 * 0.4
############################################################
### KNOWN Dp ###############################################
############################################################
rm(Dp, q.Ls, q.m3min, AER, speed)
Dp <- c(5, 21, 57, 270)   # <-------------------------------------------------------------------- INSERT VALUE HERE
# L/s = L/s
q.Ls <- k * Dp^(1/2)
# m3/min = L/s    * s*min^-1 * m3*L^-1
q.m3min <- k * Dp^(1/2) * 60       * 10^-3
q.m3min * 60
# Experiment A
# The dataframe in 'data' added here has undergone filtering and addition of chamber ID/treatment
dat <- read.csv('../data/exp1.csv', header = TRUE, sep = ';')
dat$id <- as.character(dat$id)
# first look
ggplot(dat, aes(elapsed.time, NH3_30s, colour = treat)) + geom_point()
# fixing a time bug
dat$elapsed.time[dat$elapsed.time == 9.60] <- 9.59
# background data:
WT.bg <- dat[dat$treat == 'WT bg', ]
DC.bg <- dat[dat$treat == 'DC bg', ]
# outlet data:
WT <- dat[dat$treat == 'WT', ]
DC <- dat[dat$treat == 'DC', ]
# average background values
WT.bg.summ <- aggregate2(WT.bg, x = c('NH3_30s'), by = c('elapsed.time'),
FUN = list(bg = mean))
DC.bg.summ <- aggregate2(DC.bg, x = c('NH3_30s'), by = c('elapsed.time'),
FUN = list(bg = mean))
# joining average background and outlet data
WT <- full_join(WT.bg.summ, WT, by = 'elapsed.time')
DC <- full_join(DC.bg.summ, DC, by = 'elapsed.time')
# subtracting background from outlet data
WT$NH3.corr <- WT$NH3_30s - WT$NH3_30s.bg
DC$NH3.corr <- DC$NH3_30s - DC$NH3_30s.bg
# check
WT[! complete.cases(WT), ]
DC[! complete.cases(DC), ]
# combining
dat <- rbind(WT, DC)
# ambient temperature data
header <- c('date', 'time', 'temp')
weather <- read.table('../data/temp.txt', fill = TRUE, col.names = header)
weather <- weather[-1, ]
weather$date.time.weather <- paste(weather$date, weather$time)
dat$date.time.weather <- strptime(dat$date.time, format = '%d-%m-%Y %H:%M')
dat$date.time.weather <- as.character(round_date(dat$date.time.weather, '1 hour'))
dat.test <- left_join(dat, weather, by = 'date.time.weather')
dat$date.time.weather <- strptime(dat$date.time, format = '%d-%m-%Y %H:%M')
dat$date.time.weather <- as.character(round_date(dat$date.time.weather, '1 hour'))
dat <- left_join(dat, weather, by = 'date.time.weather')
# constants:
p.con <- 1 # atm
R.con <- 0.082057338 # [L * atm * K^-1 * mol^-1]
M.N <- 14.0067 # g * mol^-1
dat$air.flow <- 1
dat[dat$treat == 'WT', ]$air.flow <- 33.2 * 60 # L min^-1
dat[dat$treat == 'DC', ]$air.flow <- 53 * 60 # L min^-1
dat$A.frame <- 1
dat[dat$treat == 'WT', ]$A.frame <- 0.293 * 0.674 #m^2
dat[dat$treat == 'DC', ]$A.frame <- (0.7/2)^2 *3.14 #m^2
dat$temp <- as.numeric(dat$temp)
dat$air.temp.K <- dat$temp + 273.15
mean(dat$temp[1:3])
mean(dat$temp)
min(dat$temp)
max(dat$temp)
weather.exp1 <- dat[, c(1, 36)]
weather.exp1$experiment <- 'Experiment 1'
# calculation of a concentration from ppb to mol * L^-1
dat$n <- p.con / (R.con * dat$air.temp.K) * dat$NH3.corr * 10^-9  # mol * L^-1
# calculation of flux, from mol * L^-1 to g.NH3 * min^-1 * m^-2
dat$flux <- (dat$n * M.N * dat$air.flow) / dat$A.frame
# From g.NH3 * min^-1 * m^-2 to myg.NH3 * s^-1 * m^-2
dat$flux <- dat$flux * 10^6 * 60^-1
# rearanging data by tunnel
dat <- arrange(dat, by = id)
# calculation of total flux over time
# Average ammonia flux in measurement interval
dat$flux.tr <- rollapplyr(dat$flux, 2, mean, fill = NA)
dat$flux.tr[dat$elapsed.time == 0] <- 0
dat$flux.tr[dat$flux.tr < 0 ] <- 0
# calculation of total flux over time, last point * 144 min * 60 sec (time from start to start 8 x 18 min)
dat$flux.time <- dat$flux.tr * 144 * 60
# cumulative emis
dat <- mutate(group_by(dat, id, treat), cum.emis = cumsum(flux.time))
# Table for plotting flux
dat.summ <- summarise(group_by(dat, treat, elapsed.time), flux.mn = mean(flux), flux.sd = sd(flux),
cum.emis.mn = mean(cum.emis), cum.emis.sd = sd(cum.emis))
dat.end <- dat.summ[dat.summ$elapsed.time == 64.8, ]
dat.end$cum.emis.mnA <- dat.end$cum.emis.mn / 10*6
dat.end$cum.emis.sdA <- dat.end$cum.emis.sd / 10*6
ggplot(dat.end, aes(treat, cum.emis.mnA, fill = treat)) +
geom_bar(stat = 'identity', width = 0.5) +
geom_errorbar(aes(ymin = cum.emis.mnA - cum.emis.sdA, ymax = cum.emis.mnA + cum.emis.sdA), width = 0.3, size = 0.5) +
theme_bw() +
ylab(expression(paste('Cumulative  ', NH[3], ' [g', ' ', m^-2, ']')))
ggplot(dat, aes(elapsed.time, flux, color = treat)) +
geom_point() +
theme_bw() +
ylab(expression(paste(NH[3], ' flux [', mu, 'g  ', s^-1, ' ', m^-2, ']'))) +
xlab('Time after slurry application [hours]')
ggplot(dat.summ, aes(elapsed.time, flux.mn, colour = treat, fill = treat)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymax = flux.mn + flux.sd, ymin = flux.mn - flux.sd, group = treat), alpha = 0.3, color = NA) +
theme_bw() +
ylab(expression(paste(NH[3], ' flux [', mu, 'g  ', s^-1, ' ', m^-2, ']'))) +
xlab('Time after slurry application [hours]')
ggplot(dat, aes(elapsed.time, cum.emis, color = treat)) +
geom_point() +
geom_line() +
theme_bw()
ggplot(dat, aes(elapsed.time, cum.emis, color = treat)) +
geom_point() +
geom_line(group(id)) +
theme_bw()
ggplot(dat, aes(elapsed.time, cum.emis, color = treat)) +
geom_point() +
geom_line(aes(group_by = id)) +
theme_bw()
ggplot(dat, aes(elapsed.time, cum.emis, color = treat)) +
geom_point() +
geom_line(aes(group = id)) +
theme_bw()
