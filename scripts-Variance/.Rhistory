no8 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no8clean.txt',
col.names = header)
no9 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no9clean.txt',
col.names = header)
no10 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no10clean.txt',
col.names = header)
no11 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no11clean.txt',
col.names = header)
no12 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no12clean.txt',
col.names = header)
no13 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no13clean.txt',
col.names = header)
no14 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no14clean.txt',
col.names = header)
no15 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no15clean.txt',
col.names = header)
no16 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no16clean.txt',
col.names = header)
no17 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no17clean.txt',
col.names = header)
no1$exp <- 'no1'; no2$exp <- 'no2'; no3$exp <- 'no3';
no4$exp <- 'no4'; no5$exp <- 'no5'; no6$exp <- 'no6';
no7$exp <- 'no7'; no8$exp <- 'no8'; no9$exp <- 'no9';
no10$exp <- 'no10'; no11$exp <- 'no11'; no12$exp <- 'no12';
no13$exp <- 'no13'; no14$exp <- 'no14'; no15$exp <- 'no15';
no16$exp <- 'no16'; no17$exp <- 'no17';
no1 <- no1[! no1$mm > 120, ]; no4 <- no4[! no4$mm > 120, ]; no7 <- no7[! no7$mm > 120, ];
no2 <- no2[! no2$mm > 120, ]; no5 <- no5[! no5$mm > 120, ]; no8 <- no8[! no8$mm > 120, ];
no3 <- no3[! no3$mm > 120, ]; no6 <- no6[! no6$mm > 120, ]; no9 <- no9[! no9$mm > 120, ];
no10 <- no10[! no10$mm > 120, ]; no11 <- no11[! no11$mm > 120, ]; no12 <- no12[! no12$mm > 120, ];
no13 <- no13[! no13$mm > 120, ]; no14 <- no14[! no14$mm > 120, ]; no15 <- no15[! no15$mm > 120, ];
no16 <- no16[! no16$mm > 120, ]; no17 <- no17[! no17$mm > 120, ];
no1$treat <- 'water'; no2$treat <- 'water'; no3$treat <- 'water';no4$treat <- 'water'; no5$treat <- 'water'; no6$treat <- 'water';
no7$treat <- 'separated'; no8$treat <- 'separated'; no9$treat <- 'separated'; no10$treat <- 'separated'; no11$treat <- 'separated'; no12$treat <- 'separated'
no13$treat <- 'untreated'; no14$treat <- 'untreated'; no15$treat <- 'untreated'; no16$treat <- 'untreated'; no17$treat <- 'untreated';
no1$elapsed.csek <- c(1:nrow(no1)); no4$elapsed.csek <- c(1:nrow(no4)); no7$elapsed.csek <- c(1:nrow(no7))
no2$elapsed.csek <- c(1:nrow(no2)); no5$elapsed.csek <- c(1:nrow(no5)); no6$elapsed.csek <- c(1:nrow(no6))
no3$elapsed.csek <- c(1:nrow(no3)); no8$elapsed.csek <- c(1:nrow(no8)); no9$elapsed.csek <- c(1:nrow(no9))
no10$elapsed.csek <- c(1:nrow(no10)); no11$elapsed.csek <- c(1:nrow(no11)); no12$elapsed.csek <- c(1:nrow(no12))
no13$elapsed.csek <- c(1:nrow(no13)); no14$elapsed.csek <- c(1:nrow(no14)); no15$elapsed.csek <- c(1:nrow(no15))
no16$elapsed.csek <- c(1:nrow(no16)); no17$elapsed.csek <- c(1:nrow(no17));
dat <- rbind(no1, no2, no3, no4, no5, no6, no7, no8, no9, no10, no11, no12, no13, no14, no15, no16, no17)
# plots of raw data:
ggplot(dat, aes(elapsed.csek, mm , color = treat)) + geom_point()
ggplot(dat, aes(elapsed.csek, mm , color = treat)) + geom_point() + xlim(0, 500)
# exp7 there is clearly something wrong, the sensor must have been moved. it is removed.
dat <- dat[! dat$exp == 'no7', ]
dat$mm <- 100 - dat$mm
dat <- mutate(group_by(dat, exp), mm.new = 100 - mm[1] + mm)
ggplot(dat, aes(elapsed.csek, mm.new , color = treat)) + geom_point() + xlim(0, 300) + ylim(90, 100)
ggplot(dat, aes(elapsed.csek, mm.new , color = treat)) + geom_point() + xlim(0, 2000)
dat$min <- dat$elapsed.csek / 600
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point() + xlim(0, 0.5) + ylim(80, 102)
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point() + xlim(0, 3.4)
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point()
install.packages("NADA")
library(NADA)
data(asExample)
data(AsExample)
data(ShePyrene)
attach(ShePyrene)
names(ShePyrene)
View(ShePyrene)
mean(ShePyrene$Pyrene)
sd(ShePyrene$Pyre)
sd(ShePyrene$Pyrene)
summary(Pyrene)
mean(Pyrene)
sd(Pyrene)
summary(Pyrene)
censummary(Pyrene, PyreneCen)
pkym = cenfit(Pyrne, PyreneCen)
pkym = cenfit(Pyrene, PyreneCen)
pykm
pykm = cenfit(Pyrene, PyreneCen)
pykm
mean(Pyrene)
sd(Pyrene)
plot(pykm)
library(ggplot2)
library(dplyr)
library(plyr)
library(data.table)
# reading in data
filelist = list.files(path = '.',
recursive = TRUE,
pattern = '\\.txt$',
full.names = TRUE)
DT <- rbindlist(sapply(filelist, fread, simplify = FALSE), use.names = TRUE, idcol = 'FileName')
# sensor test
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# packages:
library(ggplot2)
library(plyr)
library(dplyr)
library(data.table)
# source('../functions/aggregate2.R')
# reading in data
filelist = list.files(path = '230412_data/cleaned',
recursive = TRUE,
pattern = '\\.txt$',
full.names = TRUE)
DT <- rbindlist(sapply(filelist, fread, simplify = FALSE), use.names = TRUE, idcol = 'FileName')
colnames(DT) <- c('ID', 'date.time', 'mm')
DT$ID <- gsub('230412_data/cleaned/', '', DT$ID)
DT$ID <- gsub('.txt', '', DT$ID)
# adding seconds
DT <- mutate(group_by(DT, ID), sec = 1:n()/10)
# DT$elapsed.sec <- difftime(DT$date.time, min(DT$date.time), units = 'secs')
DT <- DT[! DT$mm < 0 & ! DT$mm > 120, ]
DT$mm.new <- 100 - DT$mm
DT <- mutate(group_by(DT, ID), mm.new = 100 - mm.new[1] + mm.new)
DT$cm <- DT$mm.new / 10
# addding treatment
DT$digestate <- DT$ID
DT$digestate <- mapvalues(DT$digestate, from = c('W1_c', 'W2_c', 'W4_c','W5_c'), to = rep(c('water'), 4))
DT$digestate <- mapvalues(DT$digestate, from = c('F1_c', 'F2_c', 'F3_c', 'F4_c', 'F5_c'), to = rep(c('Foulum'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('FS1_c', 'FS2_c', 'FS3_c', 'FS4_c', 'FS6_c'), to = rep(c('Foulum sep'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('FD1_c', 'FD2_c', 'FD4_c', 'FD5_c', 'FD6_c'), to = rep(c('Foulum dis'), 5))
DT <- na.omit(DT)
# moving time so all start at sec = 0
DT <- mutate(group_by(DT, ID), sec = sec - sec[1])
ggplot(DT, aes(sec, cm, color = digestate)) +
geom_line(aes(group = ID)) +
facet_grid(~ digestate) +
labs(x = 'seconds', y = 'cm') # + xlim(0, 600) + ylim(6, 10)
# each individual digestate
ggplot(DT[DT$digestate == 'water', ], aes(sec, cm, color = ID)) +
geom_line(aes(group = ID)) +
labs(x = 'seconds', y = 'cm')# + xlim(0, 40)
# each individual digestate
ggplot(DT[DT$digestate == 'water', ], aes(sec, cm, color = ID)) +
geom_line(aes(group = ID)) +
labs(x = 'seconds', y = 'cm') + xlim(0, 40)
# sensor test
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# packages:
library(ggplot2)
library(plyr)
library(dplyr)
library(data.table)
# source('../functions/aggregate2.R')
# reading in data
filelist = list.files(path = '230412_data/cleaned',
recursive = TRUE,
pattern = '\\.txt$',
full.names = TRUE)
DT <- rbindlist(sapply(filelist, fread, simplify = FALSE), use.names = TRUE, idcol = 'FileName')
colnames(DT) <- c('ID', 'date.time', 'mm')
DT$ID <- gsub('230412_data/cleaned/', '', DT$ID)
DT$ID <- gsub('.txt', '', DT$ID)
# adding seconds
DT <- mutate(group_by(DT, ID), sec = 1:n()/10)
# DT$elapsed.sec <- difftime(DT$date.time, min(DT$date.time), units = 'secs')
DT <- DT[! DT$mm < 0 & ! DT$mm > 120, ]
DT$mm.new <- 100 - DT$mm
DT <- mutate(group_by(DT, ID), mm.new = 100 - mm.new[1] + mm.new)
DT$cm <- DT$mm.new / 10
# addding treatment
DT$digestate <- DT$ID
DT$digestate <- mapvalues(DT$digestate, from = c('W1_c', 'W2_c', 'W4_c','W5_c'), to = rep(c('water'), 4))
DT$digestate <- mapvalues(DT$digestate, from = c('F1_c', 'F2_c', 'F3_c', 'F4_c', 'F5_c'), to = rep(c('Foulum'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('FS1_c', 'FS2_c', 'FS3_c', 'FS4_c', 'FS6_c'), to = rep(c('Foulum sep'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('FD1_c', 'FD2_c', 'FD4_c', 'FD5_c', 'FD6_c'), to = rep(c('Foulum dis'), 5))
DT <- na.omit(DT)
# moving time so all start at sec = 0
DT <- mutate(group_by(DT, ID), sec = sec - sec[1])
ggplot(DT, aes(sec, cm, color = digestate)) +
geom_line(aes(group = ID)) +
facet_grid(~ digestate) +
labs(x = 'seconds', y = 'cm') # + xlim(0, 600) + ylim(6, 10)
# each individual digestate
ggplot(DT[DT$digestate == 'water', ], aes(sec, cm, color = ID)) +
geom_line(aes(group = ID)) +
labs(x = 'seconds', y = 'cm') + xlim(0, 40)
DT <- DT[grepl('ID|sec|cm|digestate', names(DT))]
DT$date <- '230412'
write.csv(DT, 'stat_data/DT_230412.csv')
45/35
35/45
# sensor test
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# packages:
library(ggplot2)
library(plyr)
library(dplyr)
library(data.table)
# source('../functions/aggregate2.R')
# reading in data
filelist = list.files(path = '230412_data/cleaned',
recursive = TRUE,
pattern = '\\.txt$',
full.names = TRUE)
DT <- rbindlist(sapply(filelist, fread, simplify = FALSE), use.names = TRUE, idcol = 'FileName')
colnames(DT) <- c('ID', 'date.time', 'mm')
DT$ID <- gsub('230412_data/cleaned/', '', DT$ID)
DT$ID <- gsub('.txt', '', DT$ID)
# adding seconds
DT <- mutate(group_by(DT, ID), sec = 1:n()/10)
# DT$elapsed.sec <- difftime(DT$date.time, min(DT$date.time), units = 'secs')
DT <- DT[! DT$mm < 0 & ! DT$mm > 120, ]
DT$mm.new <- 100 - DT$mm
DT <- mutate(group_by(DT, ID), mm.new = 100 - mm.new[1] + mm.new)
DT$cm <- DT$mm.new / 10
# addding treatment
DT$digestate <- DT$ID
DT$digestate <- mapvalues(DT$digestate, from = c('W1_c', 'W2_c', 'W4_c','W5_c'), to = rep(c('water'), 4))
DT$digestate <- mapvalues(DT$digestate, from = c('F1_c', 'F2_c', 'F3_c', 'F4_c', 'F5_c'), to = rep(c('Foulum'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('FS1_c', 'FS2_c', 'FS3_c', 'FS4_c', 'FS6_c'), to = rep(c('Foulum sep'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('FD1_c', 'FD2_c', 'FD4_c', 'FD5_c', 'FD6_c'), to = rep(c('Foulum dis'), 5))
DT <- na.omit(DT)
# moving time so all start at sec = 0
DT <- mutate(group_by(DT, ID), sec = sec - sec[1])
DT$cm.new <- log(DT$cm)
ggplot(DT, aes(sec, cm.new, color = digestate)) +
geom_line(aes(group = ID)) +
facet_grid(~ digestate) +
labs(x = 'seconds', y = 'cm') # + xlim(0, 600) + ylim(6, 10)
ggplot(DT, aes(sec, cm.new, color = digestate)) +
geom_line(aes(group = ID)) +
facet_grid(~ digestate) +
labs(x = 'seconds', y = 'cm')  + xlim(0, 100) # + ylim(6, 10)
# sensor test
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# packages:
library(ggplot2)
library(plyr)
library(dplyr)
library(data.table)
# source('../functions/aggregate2.R')
# reading in data
filelist = list.files(path = '230412_data/cleaned',
recursive = TRUE,
pattern = '\\.txt$',
full.names = TRUE)
DT <- rbindlist(sapply(filelist, fread, simplify = FALSE), use.names = TRUE, idcol = 'FileName')
colnames(DT) <- c('ID', 'date.time', 'mm')
DT$ID <- gsub('230412_data/cleaned/', '', DT$ID)
DT$ID <- gsub('.txt', '', DT$ID)
# adding seconds
DT <- mutate(group_by(DT, ID), sec = 1:n()/10)
# DT$elapsed.sec <- difftime(DT$date.time, min(DT$date.time), units = 'secs')
DT <- DT[! DT$mm < 0 & ! DT$mm > 120, ]
DT$mm.new <- 100 - DT$mm
DT <- mutate(group_by(DT, ID), mm.new = 100 - mm.new[1] + mm.new)
DT$cm <- DT$mm.new / 10
# addding treatment
DT$digestate <- DT$ID
DT$digestate <- mapvalues(DT$digestate, from = c('W1_c', 'W2_c', 'W4_c','W5_c'), to = rep(c('water'), 4))
DT$digestate <- mapvalues(DT$digestate, from = c('F1_c', 'F2_c', 'F3_c', 'F4_c', 'F5_c'), to = rep(c('Foulum'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('FS1_c', 'FS2_c', 'FS3_c', 'FS4_c', 'FS6_c'), to = rep(c('Foulum sep'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('FD1_c', 'FD2_c', 'FD4_c', 'FD5_c', 'FD6_c'), to = rep(c('Foulum dis'), 5))
DT <- na.omit(DT)
# moving time so all start at sec = 0
DT <- mutate(group_by(DT, ID), sec = sec - sec[1])
ggplot(DT, aes(sec, cm, color = digestate)) +
geom_line(aes(group = ID)) +
facet_grid(~ digestate) +
labs(x = 'seconds', y = 'cm')  + xlim(0, 100) # + ylim(6, 10)
# each individual digestate
ggplot(DT[DT$digestate == 'water', ], aes(sec, cm, color = ID)) +
geom_line(aes(group = ID)) +
labs(x = 'seconds', y = 'cm') + xlim(0, 40)
# each individual digestate
ggplot(DT[DT$digestate == 'Foulum', ], aes(sec, cm, color = ID)) +
geom_line(aes(group = ID)) +
labs(x = 'seconds', y = 'cm') + xlim(0, 40)
# each individual digestate
ggplot(DT[DT$digestate == 'Foulum sep', ], aes(sec, cm, color = ID)) +
geom_line(aes(group = ID)) +
labs(x = 'seconds', y = 'cm') + xlim(0, 40)
# each individual digestate
ggplot(DT[DT$digestate == 'Foulum sep', ], aes(sec, cm, color = ID)) +
geom_line(aes(group = ID)) +
labs(x = 'seconds', y = 'cm')# + xlim(0, 40)
# each individual digestate
ggplot(DT[DT$digestate == 'Foulum', ], aes(sec, cm, color = ID)) +
geom_line(aes(group = ID)) +
labs(x = 'seconds', y = 'cm')# + xlim(0, 40)
# sensor test
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# packages:
library(ggplot2)
library(plyr)
library(dplyr)
library(data.table)
# source('../functions/aggregate2.R')
# reading in data
filelist = list.files(path = '230412_data/cleaned',
recursive = TRUE,
pattern = '\\.txt$',
full.names = TRUE)
DT <- rbindlist(sapply(filelist, fread, simplify = FALSE), use.names = TRUE, idcol = 'FileName')
colnames(DT) <- c('ID', 'date.time', 'mm')
DT$ID <- gsub('230412_data/cleaned/', '', DT$ID)
DT$ID <- gsub('.txt', '', DT$ID)
# adding seconds
DT <- mutate(group_by(DT, ID), sec = 1:n()/10)
# DT$elapsed.sec <- difftime(DT$date.time, min(DT$date.time), units = 'secs')
DT <- DT[! DT$mm < 0 & ! DT$mm > 120, ]
DT$mm.new <- 100 - DT$mm
DT <- mutate(group_by(DT, ID), mm.new = 100 - mm.new[1] + mm.new)
DT$cm <- DT$mm.new / 10
# addding treatment
DT$digestate <- DT$ID
DT$digestate <- mapvalues(DT$digestate, from = c('W1_c', 'W2_c', 'W4_c','W5_c'), to = rep(c('water'), 4))
DT$digestate <- mapvalues(DT$digestate, from = c('F1_c', 'F2_c', 'F3_c', 'F4_c', 'F5_c'), to = rep(c('Foulum'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('FS1_c', 'FS2_c', 'FS3_c', 'FS4_c', 'FS6_c'), to = rep(c('Foulum sep'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('FD1_c', 'FD2_c', 'FD4_c', 'FD5_c', 'FD6_c'), to = rep(c('Foulum dis'), 5))
DT <- na.omit(DT)
# moving time so all start at sec = 0
DT <- mutate(group_by(DT, ID), sec = sec - sec[1])
ggplot(DT, aes(sec, cm, color = digestate)) +
geom_line(aes(group = ID)) +
facet_grid(~ digestate) +
labs(x = 'seconds', y = 'cm')  + xlim(0, 100) # + ylim(6, 10)
ggplot(DT, aes(sec, cm, color = digestate)) +
geom_line(aes(group = ID)) +
facet_grid(~ digestate) +
labs(x = 'seconds', y = 'cm') # + xlim(0, 100) # + ylim(6, 10)
DT <- DT[DT$digestate == 'Foulum' | DT$digestate == 'Foulum sep' ,]
ggplot(DT, aes(sec, cm, color = digestate)) +
geom_line(aes(group = ID)) +
facet_grid(~ digestate) +
labs(x = 'seconds', y = 'cm') # + xlim(0, 100) # + ylim(6, 10)
write.csv(DT, 'stat_data/DT_exp230412.csv')
# sensor test
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# packages:
library(ggplot2)
library(plyr)
library(dplyr)
library(data.table)
# source('../functions/aggregate2.R')
# reading in data
filelist = list.files(path = '230301_data/cleaned',
recursive = TRUE,
pattern = '\\.txt$',
full.names = TRUE)
DT <- rbindlist(sapply(filelist, fread, simplify = FALSE), use.names = TRUE, idcol = 'FileName')
colnames(DT) <- c('ID', 'date.time', 'mm')
DT$ID <- gsub('230301_data/cleaned/', '', DT$ID)
DT$ID <- gsub('.txt', '', DT$ID)
# adding seconds
DT <- mutate(group_by(DT, ID), sec = 1:n()/10)
DT <- DT[! DT$mm < 0 & ! DT$mm > 120, ]
DT$mm.new <- 100 - DT$mm
DT <- mutate(group_by(DT, ID), mm.new = 100 - mm.new[1] + mm.new)
DT$cm <- DT$mm.new / 10
# addding treatment
DT$digestate <- DT$ID
DT$digestate <- mapvalues(DT$digestate, from = c('W1_c', 'W2_c', 'W4_c', 'W5_c', 'W6_c'), to = rep(c('water'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('F1_c', 'F2_c', 'F3_c', 'F4_c', 'F5_c'), to = rep(c('Foulum'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('FS3_c', 'FS4_c', 'FS5_c', 'FS7_c', 'FS8_c'), to = rep(c('Foulum sep'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('S1_c', 'S3_c', 'S4_c', 'S5_c'), to = rep(c('Sindal 2'), 4))
DT$digestate <- mapvalues(DT$digestate, from = c('SS1_c', 'SS3_c', 'SS4_c', 'SS6_c', 'SS7_c'), to = rep(c('Sindal 1+2 sep'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('G2_c', 'G3_c', 'G4_c', 'G5_c', 'G6_c'), to = rep(c('Grauballegaard'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('B4_c', 'B5_c'), to = rep(c('BB'), 2))
# moving time so all start at sec = 0
DT <- mutate(group_by(DT, ID), sec = sec-sec[1])
DT <- na.omit(DT)
ggplot(DT, aes(sec, cm, color = digestate)) +
geom_line(aes(group = ID)) +
facet_grid(~ digestate) +
labs(x = 'seconds', y = 'cm') + xlim(0, 600) + ylim(6, 10)
DT <- DT[grepl('ID|sec|cm|digestate', names(DT))]
DT$date <- '230301'
write.csv(DT, 'stat_data/DT_exp230301.csv')
# sensor test
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# packages:
library(ggplot2)
library(plyr)
library(dplyr)
library(data.table)
# source('../functions/aggregate2.R')
# reading in data
filelist = list.files(path = '230412_data/cleaned',
recursive = TRUE,
pattern = '\\.txt$',
full.names = TRUE)
DT <- rbindlist(sapply(filelist, fread, simplify = FALSE), use.names = TRUE, idcol = 'FileName')
colnames(DT) <- c('ID', 'date.time', 'mm')
DT$ID <- gsub('230412_data/cleaned/', '', DT$ID)
DT$ID <- gsub('.txt', '', DT$ID)
# adding seconds
DT <- mutate(group_by(DT, ID), sec = 1:n()/10)
# DT$elapsed.sec <- difftime(DT$date.time, min(DT$date.time), units = 'secs')
DT <- DT[! DT$mm < 0 & ! DT$mm > 120, ]
DT$mm.new <- 100 - DT$mm
DT <- mutate(group_by(DT, ID), mm.new = 100 - mm.new[1] + mm.new)
DT$cm <- DT$mm.new / 10
# addding treatment
DT$digestate <- DT$ID
DT$digestate <- mapvalues(DT$digestate, from = c('W1_c', 'W2_c', 'W4_c','W5_c'), to = rep(c('water'), 4))
DT$digestate <- mapvalues(DT$digestate, from = c('F1_c', 'F2_c', 'F3_c', 'F4_c', 'F5_c'), to = rep(c('Foulum'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('FS1_c', 'FS2_c', 'FS3_c', 'FS4_c', 'FS6_c'), to = rep(c('Foulum sep'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('FD1_c', 'FD2_c', 'FD4_c', 'FD5_c', 'FD6_c'), to = rep(c('Foulum dis'), 5))
DT <- na.omit(DT)
# moving time so all start at sec = 0
DT <- mutate(group_by(DT, ID), sec = sec - sec[1])
ggplot(DT, aes(sec, cm, color = digestate)) +
geom_line(aes(group = ID)) +
facet_grid(~ digestate) +
labs(x = 'seconds', y = 'cm') # + xlim(0, 100) # + ylim(6, 10)
# each individual digestate
ggplot(DT[DT$digestate == 'Foulum', ], aes(sec, cm, color = ID)) +
geom_line(aes(group = ID)) +
labs(x = 'seconds', y = 'cm')# + xlim(0, 40)
# DF for Rodrigo
DT <- DT[grepl('ID|sec|cm|digestate', names(DT))]
DT$date <- '230412'
DT <- DT[DT$digestate == 'Foulum' | DT$digestate == 'Foulum sep' ,]
View(DT)
write.csv(DT, 'stat_data/DT_exp230412.csv')
# sensor test
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# packages:
library(ggplot2)
library(plyr)
library(dplyr)
library(data.table)
# source('../functions/aggregate2.R')
# reading in data
filelist = list.files(path = '230301_data/cleaned',
recursive = TRUE,
pattern = '\\.txt$',
full.names = TRUE)
DT <- rbindlist(sapply(filelist, fread, simplify = FALSE), use.names = TRUE, idcol = 'FileName')
colnames(DT) <- c('ID', 'date.time', 'mm')
DT$ID <- gsub('230301_data/cleaned/', '', DT$ID)
DT$ID <- gsub('.txt', '', DT$ID)
# adding seconds
DT <- mutate(group_by(DT, ID), sec = 1:n()/10)
DT <- DT[! DT$mm < 0 & ! DT$mm > 120, ]
DT$mm.new <- 100 - DT$mm
DT <- mutate(group_by(DT, ID), mm.new = 100 - mm.new[1] + mm.new)
DT$cm <- DT$mm.new / 10
# addding treatment
DT$digestate <- DT$ID
DT$digestate <- mapvalues(DT$digestate, from = c('W1_c', 'W2_c', 'W4_c', 'W5_c', 'W6_c'), to = rep(c('water'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('F1_c', 'F2_c', 'F3_c', 'F4_c', 'F5_c'), to = rep(c('Foulum'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('FS3_c', 'FS4_c', 'FS5_c', 'FS7_c', 'FS8_c'), to = rep(c('Foulum sep'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('S1_c', 'S3_c', 'S4_c', 'S5_c'), to = rep(c('Sindal 2'), 4))
DT$digestate <- mapvalues(DT$digestate, from = c('SS1_c', 'SS3_c', 'SS4_c', 'SS6_c', 'SS7_c'), to = rep(c('Sindal 1+2 sep'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('G2_c', 'G3_c', 'G4_c', 'G5_c', 'G6_c'), to = rep(c('Grauballegaard'), 5))
DT$digestate <- mapvalues(DT$digestate, from = c('B4_c', 'B5_c'), to = rep(c('BB'), 2))
# moving time so all start at sec = 0
DT <- mutate(group_by(DT, ID), sec = sec-sec[1])
DT <- na.omit(DT)
ggplot(DT, aes(sec, cm, color = digestate)) +
geom_line(aes(group = ID)) +
facet_grid(~ digestate) +
labs(x = 'seconds', y = 'cm') + xlim(0, 600) + ylim(6, 10)
# each individual digestate
ggplot(DT[DT$digestate == 'water', ], aes(sec, cm, color = ID)) +
geom_line(aes(group = ID)) +
labs(x = 'seconds', y = 'cm')
# DF for Rodrigo
DT <- DT[grepl('ID|sec|cm|digestate', names(DT))]
DT$date <- '230301'
DT <- DT[DT$digestate == 'Foulum' | DT$digestate == 'Foulum sep' ,]
write.csv(DT, 'stat_data/DT_exp230301.csv')
# test of recovery of NH3 from NH4Cl solution.
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('packages.R')
source('functions.R')
source('load.R')
source('plot.R')
# test of recovery of NH3 from NH4Cl solution.
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('packages.R')
source('functions.R')
### LSD data
dd <- read.xlsx('../data/Var_data.xlsx', sheet = 1)
ggplot(dd, aes(Mean, Variance, color = treat)) +
geom_point() +
geom_line(aes(group = treat), size = 0.5) +
theme_bw() +
scale_color_brewer(palette = 'Set1') +
ylab('Variance') +
xlab('Mean') +
theme(legend.position = 'bottom', legend.title = element_blank())
ggplot(dd, aes(Mean, Variance, color = Treat)) +
geom_point() +
geom_line(aes(group = Treat), size = 0.5) +
theme_bw() +
scale_color_brewer(palette = 'Set1') +
ylab('Variance') +
xlab('Mean') +
theme(legend.position = 'bottom', legend.title = element_blank())
ggsave2x('../plots-variance/Variance', height = 4, width = 7)
